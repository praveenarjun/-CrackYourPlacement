Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2


Solution:

class Solution {
    public int subarraySum(int[] nums, int k) {
        Map<Integer, Integer> map=new HashMap<>();
        int sum=0,count=0;
        map.put(0,1);
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            int removal=sum-k;
            if(map.containsKey(removal)){
                count += map.get(removal);
            }

            if(map.containsKey(sum)){
                map.put(sum, map.get(sum)+1);
            }

            else{
                map.put(sum,1);
            }

        }
        return count;
    }
}
